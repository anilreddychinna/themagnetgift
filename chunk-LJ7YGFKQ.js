import{a as x}from"./chunk-E3UUBPUS.js";import{l as C}from"./chunk-SULTRFIP.js";import{$ as _,A as v,F as l,H as U,Jb as K,Lb as O,N as j,T as b,V as F,Y as w,a as N,ba as d,ha as W,j as k,m as A,n as y,o as R,qa as L,r as p,ta as V,u as D,v as I,x as P,y as S,z as h,za as T}from"./chunk-VC2T4SAQ.js";var m="Service workers are disabled or not supported by this browser";function $(r){return I(()=>R(new Error(r)))}var f=class{constructor(t){if(this.serviceWorker=t,!t)this.worker=this.events=this.registration=$(m);else{let i=P(t,"controllerchange").pipe(p(()=>t.controller)),n=I(()=>y(t.controller)),o=D(n,i);this.worker=o.pipe(v(u=>!!u)),this.registration=this.worker.pipe(b(()=>t.getRegistration()));let g=P(t,"message").pipe(p(u=>u.data)).pipe(v(u=>u&&u.type)).pipe(j());g.connect(),this.events=g}}postMessage(t,e){return this.worker.pipe(l(1),F(i=>{i.postMessage(N({action:t},e))})).toPromise().then(()=>{})}postMessageWithOperation(t,e,i){let n=this.waitForOperationCompleted(i),o=this.postMessage(t,e);return Promise.all([o,n]).then(([,s])=>s)}generateNonce(){return Math.round(Math.random()*1e7)}eventsOfType(t){let e;return typeof t=="string"?e=i=>i.type===t:e=i=>t.includes(i.type),this.events.pipe(v(e))}nextEventOfType(t){return this.eventsOfType(t).pipe(l(1))}waitForOperationCompleted(t){return this.eventsOfType("OPERATION_COMPLETED").pipe(v(e=>e.nonce===t),l(1),p(e=>{if(e.result!==void 0)return e.result;throw new Error(e.error)})).toPromise()}get isEnabled(){return!!this.serviceWorker}},M=(()=>{class r{get isEnabled(){return this.sw.isEnabled}constructor(e){if(this.sw=e,this.pushManager=null,this.subscriptionChanges=new k,!e.isEnabled){this.messages=h,this.notificationClicks=h,this.subscription=h;return}this.messages=this.sw.eventsOfType("PUSH").pipe(p(n=>n.data)),this.notificationClicks=this.sw.eventsOfType("NOTIFICATION_CLICK").pipe(p(n=>n.data)),this.pushManager=this.sw.registration.pipe(p(n=>n.pushManager));let i=this.pushManager.pipe(b(n=>n.getSubscription()));this.subscription=S(i,this.subscriptionChanges)}requestSubscription(e){if(!this.sw.isEnabled||this.pushManager===null)return Promise.reject(new Error(m));let i={userVisibleOnly:!0},n=this.decodeBase64(e.serverPublicKey.replace(/_/g,"/").replace(/-/g,"+")),o=new Uint8Array(new ArrayBuffer(n.length));for(let s=0;s<n.length;s++)o[s]=n.charCodeAt(s);return i.applicationServerKey=o,this.pushManager.pipe(b(s=>s.subscribe(i)),l(1)).toPromise().then(s=>(this.subscriptionChanges.next(s),s))}unsubscribe(){if(!this.sw.isEnabled)return Promise.reject(new Error(m));let e=i=>{if(i===null)throw new Error("Not subscribed to push notifications.");return i.unsubscribe().then(n=>{if(!n)throw new Error("Unsubscribe failed!");this.subscriptionChanges.next(null)})};return this.subscription.pipe(l(1),b(e)).toPromise()}decodeBase64(e){return atob(e)}static{this.\u0275fac=function(i){return new(i||r)(d(f))}}static{this.\u0275prov=w({token:r,factory:r.\u0275fac})}}return r})(),q=(()=>{class r{get isEnabled(){return this.sw.isEnabled}constructor(e){if(this.sw=e,!e.isEnabled){this.versionUpdates=h,this.unrecoverable=h;return}this.versionUpdates=this.sw.eventsOfType(["VERSION_DETECTED","VERSION_INSTALLATION_FAILED","VERSION_READY","NO_NEW_VERSION_DETECTED"]),this.unrecoverable=this.sw.eventsOfType("UNRECOVERABLE_STATE")}checkForUpdate(){if(!this.sw.isEnabled)return Promise.reject(new Error(m));let e=this.sw.generateNonce();return this.sw.postMessageWithOperation("CHECK_FOR_UPDATES",{nonce:e},e)}activateUpdate(){if(!this.sw.isEnabled)return Promise.reject(new Error(m));let e=this.sw.generateNonce();return this.sw.postMessageWithOperation("ACTIVATE_UPDATE",{nonce:e},e)}static{this.\u0275fac=function(i){return new(i||r)(d(f))}}static{this.\u0275prov=w({token:r,factory:r.\u0275fac})}}return r})();var B=new _("");function G(r,t,e,i){return()=>{if(!(C(i)&&"serviceWorker"in navigator&&e.enabled!==!1))return;let n=r.get(V),o=r.get(O);n.runOutsideAngular(()=>{let a=navigator.serviceWorker,c=()=>a.controller?.postMessage({action:"INITIALIZE"});a.addEventListener("controllerchange",c),o.onDestroy(()=>{a.removeEventListener("controllerchange",c)})});let s;if(typeof e.registrationStrategy=="function")s=e.registrationStrategy();else{let[a,...c]=(e.registrationStrategy||"registerWhenStable:30000").split(":");switch(a){case"registerImmediately":s=y(null);break;case"registerWithDelay":s=H(+c[0]||0);break;case"registerWhenStable":let g=A(r.get(O).whenStable());s=c[0]?S(g,H(+c[0])):g;break;default:throw new Error(`Unknown ServiceWorker registration strategy: ${e.registrationStrategy}`)}}n.runOutsideAngular(()=>s.pipe(l(1)).subscribe(()=>navigator.serviceWorker.register(t,{scope:e.scope}).catch(a=>console.error("Service worker registration failed with:",a))))}}function H(r){return y(null).pipe(U(r))}function z(r,t){return new f(C(t)&&r.enabled!==!1?navigator.serviceWorker:void 0)}var E=class{};function oe(r,t={}){return W([M,q,{provide:B,useValue:r},{provide:E,useValue:t},{provide:f,useFactory:z,deps:[E,T]},{provide:K,useFactory:G,deps:[L,B,E,T],multi:!0}])}var Z=class r{constructor(t,e){this.swPush=t;this.http=e}vapidPublicKey="YOUR_VAPID_PUBLIC_KEY";subscribeToNotifications(){this.swPush.isEnabled&&this.swPush.requestSubscription({serverPublicKey:this.vapidPublicKey}).then(t=>{console.log("Subscribed:",t)}).catch(t=>console.error("Subscription failed:",t))}sendNotification(t,e){navigator.serviceWorker.ready.then(i=>{i.showNotification(t,{body:e,icon:"/assets/icons/icon-72x72.png"})})}static \u0275fac=function(e){return new(e||r)(d(M),d(x))};static \u0275prov=w({token:r,factory:r.\u0275fac,providedIn:"root"})};export{oe as a,Z as b};
